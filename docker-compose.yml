services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        TARGET: api
    container_name: delayed-notifier-api
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - kafka
    command: ["/usr/local/bin/api"]

  # worker:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     args:
  #       TARGET: worker
  #   container_name: delayed-notifier-worker
  #   depends_on:
  #     - postgres
  #     - redis
  #   command: ["/usr/local/bin/worker"]

  postgres:
    image: postgres:16
    container_name: delayed-notifier-postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5435:5435"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: delayed-notifier-redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  kafka:
    image: bitnami/kafka:latest
    container_name: delayed-notifier-kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_KRAFT_CLUSTER_ID=kraft-cluster-1
    volumes:
      - kafka_data:/bitnami/kafka

volumes:
  pgdata:
  redisdata:
  kafka_data: